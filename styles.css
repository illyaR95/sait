.header {
   margin-bottom: auto;
}

.logo {
    display: flex;
    align-items: center;
    justify-content: flex-start;
    padding: 5px;
    font-size: 25px; /* Встановіть бажаний розмір шрифта */
    color: rgb(27, 156, 113); /* Встановіть бажаний колір тексту */
}


.logo img {
    max-width: 100px; /* Ви можете змінити це значення відповідно до розміру вашого герба */
}




body {
    font-family: Arial, sans-serif;
    /* Задає шрифт тексту для всього тіла документа на Arial або будь-якому санс-серіф шрифті */
    margin: 0;
    /* Встановлює зовнішній відступ для всього тіла документа на нуль */
    padding: 0;
    /* Встановлює внутрішній відступ для всього тіла документа на нуль */
    text-align: center;
    /* Вирівнює текст у всьому тілі документа по центру */
    background-image: url("path_to_your_background_image.jpg");
    /* Встановлює зображення фону для всього тіла документа */
    background-size: cover;
    /* Заповнює фонове зображення всім доступним простором, щоб воно не масштабувалося або не виглядало відформатовано */
}

.container.home {
    background-image: url("home-background.jpg");
    /* Встановлює зображення фону для контейнера з класом "home" */
    background-size: cover;
    /* Заповнює фонове зображення всім доступним простором в контейнері */
}

.container.children {
    background-image: url("ditu_fon.jpg");
    /* Встановлює зображення фону для контейнера з класом "children" */
    background-size: cover;
    /* Заповнює фонове зображення всім доступним простором в контейнері */
}

.container.unbreakable {
    background-image: url("ne.jpg");
    /* Встановлює зображення фону для контейнера з класом "unbreakable" */
    background-size: contain;
    /* Заповнює фонове зображення всім доступним простором в контейнері */
}

.container {
    display: flex;
    /* Встановлює контейнеру стиль відображення як flex */
    flex-direction: column;
    /* Встановлює напрямок відображення контейнера як колонку */
    justify-content: flex-start;
    /* Вирівнює дочірні елементи контейнера починаючи зверху */
    align-items: center;
    /* Вирівнює дочірні елементи контейнера по центру по горизонталі */
    min-height: 100vh;
    /* Встановлює мінімальну висоту контейнера як 100% висоти видимого вікна браузера */
    padding-top: 10px;
    /* Додає зовнішній відступ зверху для контейнера */
    perspective: 100px;
    /* Встановлює перспективу для дочірніх елементів контейнера */
}





.buttons {
    display: flex;
    /* Встановлює кнопкам стиль відображення як flex */
    justify-content: center;
    /* Вирівнює кнопки по центру по горизонталі */
    align-items: center;
    /* Вирівнює кнопки по центру по вертикалі */
    flex-wrap: wrap;
    /* Дозволяє кнопкам переноситися на новий рядок, якщо вони не поміщаються в одному рядку */
    background: linear-gradient(to right, transparent, rgb(1, 184, 172), transparent);
    /* Встановлює градієнтний фон для кнопок */
}

.dropdown {
    position: relative;
    /* Встановлює позицію кнопки як відносної */
    display: inline-block;
    /* Встановлює кнопку як блок в ряду */
    margin: 1px;
    /* Встановлює зовнішній відступ для кнопки */
}

.dropdown-content {
    display: none;
    /* Задає властивість "display" для випадаючого вмісту як "none", щоб спочатку він був невидимим */
    position: absolute;
    /* Встановлює позицію випадаючого вмісту як абсолютну */
    background-color: #090909;
    /* Встановлює колір фону для випадаючого вмісту */
    min-width: 160px;
    /* Встановлює мінімальну ширину випадаючого вмісту */
    box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);
    /* Додає тінь для випадаючого вмісту */
    padding: 12px 16px;
    /* Встановлює внутрішній відступ для випадаючого вмісту */
    z-index: 1;
    /* Задає властивість "z-index" для випадаючого вмісту, щоб він був над іншими елементами */
}

.dropdown:hover .dropdown-content {
    display: block;
    /* Змінює властивість "display" випадаючого вмісту на "block", коли кнопка наведена */
}

button {
    padding: 10px 20px;
    /* Встановлює внутрішній відступ для кнопки */
    font-size: 18px;
    /* Встановлює розмір шрифту для тексту кнопки */
    margin: 5px;
    /* Встановлює зовнішній відступ для кнопки */
    cursor: pointer;
    /* Змінює вигляд курсору, коли він наведений на кнопку */
    background-color: rgb(0, 155, 152);
    /* Встановлює колір фону для кнопки */
    color: white;
    /* Встановлює колір тексту для кнопки */
    border: none;
    /* Встановлює безрамковий стиль для кнопки */
    transition: background-color 0.3s ease;
    /* Задає плавний перехід для зміни кольору фону кнопки */
}

button:hover {
    background-color: rgb(45, 45, 45);
    /* Змінює колір фону кнопки при наведенні */
}

.dropdown-content a {
    color: rgb(255, 255, 255);
    /* Встановлює колір тексту для посилань у випадаючому вмісті */
    text-decoration: none;
    /* Вимикає підкреслення для посилань у випадаючому вмісті */
    display: block;
    /* Встановлює посилання як блокові елементи */
}

.dropdown-content a:hover {
    background-color: #ddd;
    /* Змінює колір фону посилань у випадаючому вмісті при наведенні */
}

.paper {
    width: 210mm;
    height: 297mm;
    background-color: #ffffffb7;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    margin: 50px auto;
    padding: 50px;
    position: relative;
    font-family: Arial, sans-serif;
    font-size: 26px;
    overflow: auto; /* або scroll, якщо потрібно відображати скроллбар, якщо текст не поміщається всередині блоку */
    word-wrap: break-word; /* ця властивість дозволить тексту автоматично переноситися на новий рядок, якщо він не поміщається */
}

